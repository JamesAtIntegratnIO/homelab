apiVersion: v1
kind: Namespace
metadata:
  labels:
    backstage.io/kubernetes-id: loki
    goldilocks.fairwinds.com/enabled: "true"
  name: monitoring
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.6
    helm.sh/chart: loki-distributed-0.79.0
  name: monitoring-loki-distributed
  namespace: monitoring
---
apiVersion: v1
data:
  runtime.yaml: |2

    {}
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.6
    helm.sh/chart: loki-distributed-0.79.0
  name: monitoring-loki-distributed-runtime
  namespace: monitoring
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.6
    helm.sh/chart: loki-distributed-0.79.0
  name: monitoring-loki-distributed-distributor
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.6
    helm.sh/chart: loki-distributed-0.79.0
  name: monitoring-loki-distributed-ingester
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/name: loki-distributed
    prometheus.io/service-monitor: "false"
  name: monitoring-loki-distributed-ingester-headless
  namespace: monitoring
spec:
  clusterIP: None
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.6
    helm.sh/chart: loki-distributed-0.79.0
  name: monitoring-loki-distributed-memberlist
  namespace: monitoring
spec:
  clusterIP: None
  ports:
  - name: tcp
    port: 7946
    protocol: TCP
    targetPort: http-memberlist
  selector:
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.6
    helm.sh/chart: loki-distributed-0.79.0
  name: monitoring-loki-distributed-querier
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/name: loki-distributed
    prometheus.io/service-monitor: "false"
  name: monitoring-loki-distributed-querier-headless
  namespace: monitoring
spec:
  clusterIP: None
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.6
    helm.sh/chart: loki-distributed-0.79.0
  name: monitoring-loki-distributed-query-frontend
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  - name: grpclb
    port: 9096
    protocol: TCP
    targetPort: grpc
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.6
    helm.sh/chart: loki-distributed-0.79.0
    prometheus.io/service-monitor: "false"
  name: monitoring-loki-distributed-query-frontend-headless
  namespace: monitoring
spec:
  clusterIP: None
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  - name: grpclb
    port: 9096
    protocol: TCP
    targetPort: grpc
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.9.6
    helm.sh/chart: loki-distributed-0.79.0
  name: monitoring-loki-distributed-distributor
  namespace: monitoring
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: distributor
      app.kubernetes.io/instance: monitoring
      app.kubernetes.io/name: loki-distributed
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: 60ab61963f3d6a34f6fac57e58f4eb38d75138d11ee3bd563d5902aac0103ee1
      labels:
        app.kubernetes.io/component: distributor
        app.kubernetes.io/instance: monitoring
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: distributor
                  app.kubernetes.io/instance: monitoring
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: distributor
                app.kubernetes.io/instance: monitoring
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=distributor
        image: docker.io/grafana/loki:2.9.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: distributor
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: monitoring-loki-distributed
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        secret:
          secretName: loki-config-secret
      - configMap:
          name: monitoring-loki-distributed-runtime
        name: runtime-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.6
    helm.sh/chart: loki-distributed-0.79.0
  name: monitoring-loki-distributed-query-frontend
  namespace: monitoring
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: monitoring
      app.kubernetes.io/name: loki-distributed
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: 60ab61963f3d6a34f6fac57e58f4eb38d75138d11ee3bd563d5902aac0103ee1
      labels:
        app.kubernetes.io/component: query-frontend
        app.kubernetes.io/instance: monitoring
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: query-frontend
                  app.kubernetes.io/instance: monitoring
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: query-frontend
                app.kubernetes.io/instance: monitoring
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=query-frontend
        image: docker.io/grafana/loki:2.9.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: query-frontend
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: monitoring-loki-distributed
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        secret:
          secretName: loki-config-secret
      - configMap:
          name: monitoring-loki-distributed-runtime
        name: runtime-config
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.9.6
    helm.sh/chart: loki-distributed-0.79.0
  name: monitoring-loki-distributed-ingester
  namespace: monitoring
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: ingester
      app.kubernetes.io/instance: monitoring
      app.kubernetes.io/name: loki-distributed
  serviceName: monitoring-loki-distributed-ingester-headless
  template:
    metadata:
      annotations:
        checksum/config: 60ab61963f3d6a34f6fac57e58f4eb38d75138d11ee3bd563d5902aac0103ee1
      labels:
        app.kubernetes.io/component: ingester
        app.kubernetes.io/instance: monitoring
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: ingester
                  app.kubernetes.io/instance: monitoring
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: ingester
                app.kubernetes.io/instance: monitoring
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=ingester
        image: docker.io/grafana/loki:2.9.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: ingester
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
        - mountPath: /var/loki
          name: data
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: monitoring-loki-distributed
      terminationGracePeriodSeconds: 300
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: ingester
            app.kubernetes.io/instance: monitoring
            app.kubernetes.io/name: loki-distributed
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: config
        secret:
          secretName: loki-config-secret
      - configMap:
          name: monitoring-loki-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: data
  updateStrategy:
    rollingUpdate:
      partition: 0
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.9.6
    helm.sh/chart: loki-distributed-0.79.0
  name: monitoring-loki-distributed-querier
  namespace: monitoring
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: querier
      app.kubernetes.io/instance: monitoring
      app.kubernetes.io/name: loki-distributed
  serviceName: monitoring-loki-distributed-querier-headless
  template:
    metadata:
      annotations:
        checksum/config: 60ab61963f3d6a34f6fac57e58f4eb38d75138d11ee3bd563d5902aac0103ee1
      labels:
        app.kubernetes.io/component: querier
        app.kubernetes.io/instance: monitoring
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: querier
                  app.kubernetes.io/instance: monitoring
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: querier
                app.kubernetes.io/instance: monitoring
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=querier
        image: docker.io/grafana/loki:2.9.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: querier
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
        - mountPath: /var/loki
          name: data
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: monitoring-loki-distributed
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: querier
            app.kubernetes.io/instance: monitoring
            app.kubernetes.io/name: loki-distributed
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: config
        secret:
          secretName: loki-config-secret
      - configMap:
          name: monitoring-loki-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: data
  updateStrategy:
    rollingUpdate:
      partition: 0
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.6
    helm.sh/chart: loki-distributed-0.79.0
  name: monitoring-loki-distributed
  namespace: monitoring
spec:
  ingressClassName: nginx
  rules:
  - host: loki.k8s.integratn.tech
    http:
      paths:
      - backend:
          service:
            name: monitoring-loki-distributed-distributor
            port:
              number: 3100
        path: /api/prom/push
        pathType: Prefix
      - backend:
          service:
            name: monitoring-loki-distributed-distributor
            port:
              number: 3100
        path: /loki/api/v1/push
        pathType: Prefix
      - backend:
          service:
            name: monitoring-loki-distributed-querier
            port:
              number: 3100
        path: /api/prom/tail
        pathType: Prefix
      - backend:
          service:
            name: monitoring-loki-distributed-querier
            port:
              number: 3100
        path: /loki/api/v1/tail
        pathType: Prefix
      - backend:
          service:
            name: monitoring-loki-distributed-query-frontend
            port:
              number: 3100
        path: /loki/api
        pathType: Prefix
      - backend:
          service:
            name: monitoring-loki-distributed-ruler
            port:
              number: 3100
        path: /api/prom/rules
        pathType: Prefix
      - backend:
          service:
            name: monitoring-loki-distributed-ruler
            port:
              number: 3100
        path: /loki/api/v1/rules
        pathType: Prefix
      - backend:
          service:
            name: monitoring-loki-distributed-ruler
            port:
              number: 3100
        path: /prometheus/api/v1/rules
        pathType: Prefix
      - backend:
          service:
            name: monitoring-loki-distributed-ruler
            port:
              number: 3100
        path: /prometheus/api/v1/alerts
        pathType: Prefix
  tls:
  - hosts:
    - loki.k8s.integratn.tech
    secretName: loki-distributed-tls
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  labels:
    backstage.io/kubernetes-id: loki
  name: loki-config-secret
  namespace: monitoring
spec:
  itemPath: vaults/homelab/items/loki-config-secret
