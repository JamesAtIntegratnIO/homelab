apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-controller
  namespace: falco
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-dashboard
  namespace: falco
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-upgrade,post-delete
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
    helm.sh/hook-weight: "-250"
  name: falco-goldilocks-vpa-uninstall
  namespace: falco
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-6.4.1
  name: falco-metrics-server
  namespace: falco
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-controller
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - create
  - delete
  - update
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-dashboard
rules:
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - list
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-6.4.1
  name: falco-metrics-server-default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/metrics
  verbs:
  - get
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-6.4.1
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: falco-metrics-server-default-view
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-6.4.1
  name: falco-metrics-server-default-auth-reader
  namespace: falco
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: falco-metrics-server
  namespace: falco
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: falco-goldilocks-controller
subjects:
- kind: ServiceAccount
  name: falco-goldilocks-controller
  namespace: falco
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: falco-goldilocks-dashboard
subjects:
- kind: ServiceAccount
  name: falco-goldilocks-dashboard
  namespace: falco
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-upgrade,post-delete
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
    helm.sh/hook-weight: "-240"
  labels:
    app.kubernetes.io/component: vpa-uninstall
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-vpa-uninstall
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: falco-goldilocks-vpa-uninstall
  namespace: falco
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-6.4.1
  name: falco-metrics-server-default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: falco-metrics-server-default
subjects:
- kind: ServiceAccount
  name: falco-metrics-server
  namespace: falco
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-6.4.1
  name: falco-metrics-server-default-auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: falco-metrics-server
  namespace: falco
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-dashboard
  namespace: falco
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: falco
    app.kubernetes.io/name: goldilocks
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-6.4.1
  name: falco-metrics-server
  namespace: falco
spec:
  ports:
  - name: https
    nodePort: null
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/name: metrics-server
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-controller
  namespace: falco
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: falco
      app.kubernetes.io/name: goldilocks
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: falco
        app.kubernetes.io/name: goldilocks
    spec:
      containers:
      - command:
        - /goldilocks
        - controller
        - -v2
        image: us-docker.pkg.dev/fairwinds-ops/oss/goldilocks:v4.10.0
        imagePullPolicy: Always
        name: goldilocks
        resources:
          limits: {}
          requests:
            cpu: 25m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10324
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: falco-goldilocks-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-dashboard
  namespace: falco
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: dashboard
      app.kubernetes.io/instance: falco
      app.kubernetes.io/name: goldilocks
  template:
    metadata:
      labels:
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/instance: falco
        app.kubernetes.io/name: goldilocks
    spec:
      containers:
      - command:
        - /goldilocks
        - dashboard
        - --exclude-containers=linkerd-proxy,istio-proxy
        - -v2
        image: us-docker.pkg.dev/fairwinds-ops/oss/goldilocks:v4.10.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
        name: goldilocks
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
        resources:
          limits: {}
          requests:
            cpu: 25m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10324
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: falco-goldilocks-dashboard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-6.4.1
  name: falco-metrics-server
  namespace: falco
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: falco
      app.kubernetes.io/name: metrics-server
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: falco
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: metrics-server
        helm.sh/chart: metrics-server-6.4.1
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: falco
                  app.kubernetes.io/name: metrics-server
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - args:
        - --secure-port=8443
        command:
        - metrics-server
        env: null
        envFrom: null
        image: docker.io/bitnami/metrics-server:0.6.3-debian-11-r21
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /livez
            port: https
            scheme: HTTPS
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: metrics-server
        ports:
        - containerPort: 8443
          name: https
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits: {}
          requests: {}
        securityContext:
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
      dnsPolicy: ClusterFirst
      serviceAccountName: falco-metrics-server
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-6.4.1
  name: v1beta1.metrics.k8s.io
spec:
  group: metrics.k8s.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: falco-metrics-server
    namespace: falco
  version: v1beta1
  versionPriority: 100
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-upgrade,post-delete
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-230"
  labels:
    app.kubernetes.io/component: vpa-uninstall
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-vpa-uninstall
  namespace: falco
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: vpa-uninstall
        app.kubernetes.io/instance: falco
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: goldilocks
        helm.sh/chart: goldilocks-8.0.1
      name: falco-goldilocks-vpa-uninstall
    spec:
      containers:
      - args:
        - -c
        - "apk --update add git openssl\ngit clone \"https://github.com/kubernetes/autoscaler.git\"\ncd
          autoscaler/vertical-pod-autoscaler\ngit checkout \n./hack/vpa-down.sh\n"
        command:
        - bash
        image: quay.io/reactiveops/ci-images:v9-alpine
        name: vpa-uninstall
      restartPolicy: Never
      serviceAccountName: falco-goldilocks-vpa-uninstall
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-dashboard
  namespace: falco
spec:
  ingressClassName: nginx
  rules:
  - host: goldilocks.k8s.integratn.tech
    http:
      paths:
      - backend:
          service:
            name: falco-goldilocks-dashboard
            port:
              name: http
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - goldilocks.k8s.integratn.tech
    secretName: goldilocks-tls
