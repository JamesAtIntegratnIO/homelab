apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-controller
  namespace: falco
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-dashboard
  namespace: falco
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-controller
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - create
  - delete
  - update
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-dashboard
rules:
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - list
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: falco-goldilocks-controller
subjects:
- kind: ServiceAccount
  name: falco-goldilocks-controller
  namespace: falco
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: falco-goldilocks-dashboard
subjects:
- kind: ServiceAccount
  name: falco-goldilocks-dashboard
  namespace: falco
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-dashboard
  namespace: falco
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: falco
    app.kubernetes.io/name: goldilocks
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-controller
  namespace: falco
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: falco
      app.kubernetes.io/name: goldilocks
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: falco
        app.kubernetes.io/name: goldilocks
    spec:
      containers:
      - command:
        - /goldilocks
        - controller
        - -v2
        image: us-docker.pkg.dev/fairwinds-ops/oss/goldilocks:v4.10.0
        imagePullPolicy: Always
        name: goldilocks
        resources:
          limits: {}
          requests:
            cpu: 25m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10324
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: falco-goldilocks-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-dashboard
  namespace: falco
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: dashboard
      app.kubernetes.io/instance: falco
      app.kubernetes.io/name: goldilocks
  template:
    metadata:
      labels:
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/instance: falco
        app.kubernetes.io/name: goldilocks
    spec:
      containers:
      - command:
        - /goldilocks
        - dashboard
        - --exclude-containers=linkerd-proxy,istio-proxy
        - -v2
        image: us-docker.pkg.dev/fairwinds-ops/oss/goldilocks:v4.10.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
        name: goldilocks
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
        resources:
          limits: {}
          requests:
            cpu: 25m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10324
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: falco-goldilocks-dashboard
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: falco-goldilocks-dashboard
  namespace: falco
spec:
  ingressClassName: nginx
  rules:
  - host: goldilocks.k8s.integratn.tech
    http:
      paths:
      - backend:
          service:
            name: falco-goldilocks-dashboard
            port:
              name: http
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - goldilocks.k8s.integratn.tech
    secretName: goldilocks-tls
