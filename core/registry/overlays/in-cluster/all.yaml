annotations:
  argocd.argoproj.io/sync-wave: "-1"
apiVersion: v1
kind: Namespace
metadata:
  labels:
    backstage.io/kubernetes-id: docker-registry
  name: docker-registry
---
apiVersion: v1
data:
  daemon.json: |
    {
      "insecure-registries" : ["localhost:5000", "registry.k8s.integratn.tech:5000"]
    }
kind: ConfigMap
metadata:
  labels:
    backstage.io/kubernetes-id: docker-registry
  name: daemon-json
  namespace: docker-registry
---
apiVersion: v1
kind: Service
metadata:
  labels:
    backstage.io/kubernetes-id: docker-registry
  name: docker-registry
  namespace: docker-registry
spec:
  ports:
  - name: https
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: docker-registry
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    backstage.io/kubernetes-id: docker-registry
  name: docker-registry
  namespace: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - image: docker.io/library/registry:2.8.1
        name: docker-registry
        ports:
        - containerPort: 5000
          name: https
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/docker/registry
          name: config
          readOnly: true
        - mountPath: /etc/docker
          name: daemon-json
          readOnly: true
      volumes:
      - name: config
        secret:
          secretName: config-secret
      - configMap:
          name: daemon-json
        name: daemon-json
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  labels:
    backstage.io/kubernetes-id: docker-registry
  name: docker-registry
  namespace: docker-registry
spec:
  ingressClassName: nginx
  rules:
  - host: registry.k8s.integratn.tech
    http:
      paths:
      - backend:
          service:
            name: docker-registry
            port:
              name: https
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - registry.k8s.integratn.tech
    secretName: docker-registry-tls
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  labels:
    backstage.io/kubernetes-id: docker-registry
  name: config-secret
  namespace: docker-registry
spec:
  itemPath: vaults/homelab/items/docker-registry-config-yaml
