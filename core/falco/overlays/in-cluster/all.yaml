apiVersion: v1
kind: Namespace
metadata:
  labels:
    backstage.io/kubernetes-id: falco
    goldilocks.fairwinds.com/enabled: "true"
  name: falco
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falco
    app.kubernetes.io/version: 0.38.1
    helm.sh/chart: falco-4.5.1
  name: falco
  namespace: falco
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick
  namespace: falco
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: ui
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick-ui
  namespace: falco
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falco
    app.kubernetes.io/version: 0.38.1
    helm.sh/chart: falco-4.5.1
  name: falco
  namespace: falco
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick
  namespace: falco
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: ui
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick-ui
  namespace: falco
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falco
    app.kubernetes.io/version: 0.38.1
    helm.sh/chart: falco-4.5.1
  name: falco
  namespace: falco
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: falco
subjects:
- kind: ServiceAccount
  name: falco
  namespace: falco
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick
  namespace: falco
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: falco-falcosidekick
subjects:
- kind: ServiceAccount
  name: falco-falcosidekick
  namespace: falco
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: ui
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick-ui
  namespace: falco
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: falco-falcosidekick-ui
subjects:
- kind: ServiceAccount
  name: falco-falcosidekick-ui
  namespace: falco
---
apiVersion: v1
data:
  falco.yaml: |-
    base_syscalls:
      custom_set: []
      repair: false
    buffered_outputs: false
    config_files:
    - /etc/falco/config.d
    engine:
      ebpf:
        buf_size_preset: 4
        drop_failed_exit: false
        probe: ${HOME}/.falco/falco-bpf.o
      kind: modern_ebpf
      kmod:
        buf_size_preset: 4
        drop_failed_exit: false
      modern_ebpf:
        buf_size_preset: 4
        cpus_for_each_buffer: 2
        drop_failed_exit: false
    falco_libs:
      thread_table_size: 262144
    file_output:
      enabled: false
      filename: ./events.txt
      keep_alive: false
    grpc:
      bind_address: unix:///run/falco/falco.sock
      enabled: false
      threadiness: 0
    grpc_output:
      enabled: false
    http_output:
      ca_bundle: ""
      ca_cert: ""
      ca_path: /etc/falco/certs/
      client_cert: /etc/falco/certs/client/client.crt
      client_key: /etc/falco/certs/client/client.key
      compress_uploads: false
      echo: false
      enabled: true
      insecure: false
      keep_alive: false
      mtls: false
      url: http://falco-falcosidekick:2801
      user_agent: falcosecurity/falco
    json_include_output_property: true
    json_include_tags_property: true
    json_output: true
    libs_logger:
      enabled: false
      severity: debug
    load_plugins: []
    log_level: info
    log_stderr: true
    log_syslog: true
    metrics:
      convert_memory_to_mb: true
      enabled: false
      include_empty_values: false
      interval: 1h
      kernel_event_counters_enabled: true
      libbpf_stats_enabled: true
      output_rule: true
      resource_utilization_enabled: true
      rules_counters_enabled: true
      state_counters_enabled: true
    output_timeout: 2000
    outputs:
      max_burst: 1000
      rate: 0
    outputs_queue:
      capacity: 0
    plugins:
    - init_config: null
      library_path: libk8saudit.so
      name: k8saudit
      open_params: http://:9765/k8s-audit
    - library_path: libcloudtrail.so
      name: cloudtrail
    - init_config: ""
      library_path: libjson.so
      name: json
    priority: debug
    program_output:
      enabled: false
      keep_alive: false
      program: 'jq ''{text: .output}'' | curl -d @- -X POST https://hooks.slack.com/services/XXX'
    rule_matching: first
    rules_file:
    - /etc/falco/falco_rules.yaml
    - /etc/falco/falco_rules.local.yaml
    - /etc/falco/rules.d
    stdout_output:
      enabled: true
    syscall_event_drops:
      actions:
      - log
      - alert
      max_burst: 1
      rate: 0.03333
      simulate_drops: false
      threshold: 0.1
    syscall_event_timeouts:
      max_consecutives: 1000
    syslog_output:
      enabled: true
    time_format_iso_8601: false
    watch_config_files: true
    webserver:
      enabled: true
      k8s_healthz_endpoint: /healthz
      listen_port: 8765
      prometheus_metrics_enabled: false
      ssl_certificate: /etc/falco/falco.pem
      ssl_enabled: false
      threadiness: 0
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falco
    app.kubernetes.io/version: 0.38.1
    helm.sh/chart: falco-4.5.1
  name: falco
  namespace: falco
---
apiVersion: v1
data:
  falcoctl.yaml: |-
    artifact:
      allowedTypes:
      - rulesfile
      - plugin
      follow:
        every: 6h
        falcoversions: http://localhost:8765/versions
        pluginsDir: /plugins
        refs:
        - falco-rules:3
        rulesfilesDir: /rulesfiles
      install:
        pluginsDir: /plugins
        refs:
        - falco-rules:3
        resolveDeps: true
        rulesfilesDir: /rulesfiles
    indexes:
    - name: falcosecurity
      url: https://falcosecurity.github.io/falcoctl/index.yaml
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falco
    app.kubernetes.io/version: 0.38.1
    helm.sh/chart: falco-4.5.1
  name: falco-falcoctl
  namespace: falco
---
apiVersion: v1
data:
  FALCOSIDEKICK_UI_USER: YWRtaW46YWRtaW4=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: ui
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick-ui
  namespace: falco
type: Opaque
---
apiVersion: v1
data: null
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: ui
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick-ui-redis
  namespace: falco
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick
  namespace: falco
spec:
  ports:
  - name: http
    port: 2801
    protocol: TCP
    targetPort: http
  - name: http-notls
    port: 2810
    protocol: TCP
    targetPort: http-notls
  selector:
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: falco
    app.kubernetes.io/name: falcosidekick
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ui
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick-ui
  namespace: falco
spec:
  ports:
  - name: http
    port: 2802
    protocol: TCP
    targetPort: 2802
  selector:
    app.kubernetes.io/component: ui
    app.kubernetes.io/instance: falco
    app.kubernetes.io/name: falcosidekick
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ui
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick-ui-redis
  namespace: falco
spec:
  ports:
  - name: redis
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app.kubernetes.io/component: ui-redis
    app.kubernetes.io/instance: falco
    app.kubernetes.io/name: falcosidekick
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick
  namespace: falco
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: core
      app.kubernetes.io/instance: falco
      app.kubernetes.io/name: falcosidekick
  template:
    metadata:
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/component: core
        app.kubernetes.io/instance: falco
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: falcosidekick
        app.kubernetes.io/part-of: falcosidekick
        app.kubernetes.io/version: 2.28.0
        helm.sh/chart: falcosidekick-0.7.19
    spec:
      containers:
      - env:
        - name: DEBUG
          value: "false"
        - name: CUSTOMFIELDS
          value: ""
        - name: TEMPLATEDFIELDS
          value: ""
        - name: BRACKETREPLACER
          value: ""
        - name: MUTUALTLSFILESPATH
          value: /etc/certs
        - name: MUTUALTLSCLIENT_CERTFILE
          value: ""
        - name: MUTUALTLSCLIENT_KEYFILE
          value: ""
        - name: MUTUALTLSCLIENT_CACERTFILE
          value: ""
        envFrom:
        - secretRef:
            name: falcosidekick
        image: docker.io/falcosecurity/falcosidekick:2.28.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        name: falcosidekick
        ports:
        - containerPort: 2801
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ping
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        resources: {}
      securityContext:
        fsGroup: 1234
        runAsUser: 1234
      serviceAccountName: falco-falcosidekick
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: ui
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick-ui
  namespace: falco
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: ui
      app.kubernetes.io/instance: falco
      app.kubernetes.io/name: falcosidekick
  template:
    metadata:
      labels:
        app.kubernetes.io/component: ui
        app.kubernetes.io/instance: falco
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: falcosidekick
        app.kubernetes.io/part-of: falcosidekick
        app.kubernetes.io/version: 2.28.0
        helm.sh/chart: falcosidekick-0.7.19
    spec:
      containers:
      - args:
        - -r
        - falco-falcosidekick-ui-redis:6379
        - -l
        - info
        envFrom:
        - secretRef:
            name: falco-falcosidekick-ui
        image: docker.io/falcosecurity/falcosidekick-ui:2.2.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/v1/healthz
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        name: falcosidekick-ui
        ports:
        - containerPort: 2802
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /api/v1/healthz
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        resources: {}
      securityContext:
        fsGroup: 1234
        runAsUser: 1234
      serviceAccountName: falco-falcosidekick-ui
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: ui-redis
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick-ui-redis
  namespace: falco
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: ui-redis
      app.kubernetes.io/instance: falco
      app.kubernetes.io/name: falcosidekick
  serviceName: falco-falcosidekick-ui-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/component: ui-redis
        app.kubernetes.io/instance: falco
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: falcosidekick
        app.kubernetes.io/part-of: falcosidekick
        app.kubernetes.io/version: 2.28.0
        helm.sh/chart: falcosidekick-0.7.19
    spec:
      containers:
      - args: []
        image: docker.io/redis/redis-stack:6.2.6-v3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 6379
          timeoutSeconds: 2
        name: redis
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 6379
          timeoutSeconds: 2
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: falco-falcosidekick-ui-redis-data
      serviceAccountName: falco-falcosidekick-ui
  volumeClaimTemplates:
  - metadata:
      name: falco-falcosidekick-ui-redis-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falco
    app.kubernetes.io/version: 0.38.1
    helm.sh/chart: falco-4.5.1
  name: falco
  namespace: falco
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: falco
      app.kubernetes.io/name: falco
  template:
    metadata:
      annotations:
        checksum/certs: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/config: c17811aec4dcecd888e7a93a09c99bf5b92d94abe7ca31d4c6d635fbe5924809
        checksum/rules: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      labels:
        app.kubernetes.io/instance: falco
        app.kubernetes.io/name: falco
      name: falco
    spec:
      containers:
      - args:
        - /usr/bin/falco
        - --cri
        - /var/run/docker.sock
        - --cri
        - /run/containerd/containerd.sock
        - --cri
        - /run/crio/crio.sock
        - -pk
        env:
        - name: HOST_ROOT
          value: /host
        - name: FALCO_HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: FALCO_K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: docker.io/falcosecurity/falco-no-driver:0.38.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8765
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        name: falco
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8765
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          privileged: true
        tty: false
        volumeMounts:
        - mountPath: /etc/falco
          name: rulesfiles-install-dir
        - mountPath: /usr/share/falco/plugins
          name: plugins-install-dir
        - mountPath: /root/.falco
          name: root-falco-fs
        - mountPath: /host/proc
          name: proc-fs
        - mountPath: /host/etc
          name: etc-fs
          readOnly: true
        - mountPath: /host/var/run/
          name: docker-socket
        - mountPath: /host/run/containerd/
          name: containerd-socket
        - mountPath: /host/run/crio/
          name: crio-socket
        - mountPath: /etc/falco/falco.yaml
          name: falco-yaml
          subPath: falco.yaml
      - args:
        - artifact
        - follow
        - --log-format=json
        env: null
        image: docker.io/falcosecurity/falcoctl:0.8.0
        imagePullPolicy: IfNotPresent
        name: falcoctl-artifact-follow
        securityContext: null
        volumeMounts:
        - mountPath: /plugins
          name: plugins-install-dir
        - mountPath: /rulesfiles
          name: rulesfiles-install-dir
        - mountPath: /etc/falcoctl
          name: falcoctl-config-volume
      initContainers:
      - args:
        - auto
        env:
        - name: HOST_ROOT
          value: /host
        - name: FALCOCTL_DRIVER_CONFIG_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: docker.io/falcosecurity/falco-driver-loader:0.38.1
        imagePullPolicy: IfNotPresent
        name: falco-driver-loader
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /root/.falco
          name: root-falco-fs
        - mountPath: /host/proc
          name: proc-fs
          readOnly: true
        - mountPath: /host/boot
          name: boot-fs
          readOnly: true
        - mountPath: /host/lib/modules
          name: lib-modules
        - mountPath: /host/usr
          name: usr-fs
          readOnly: true
        - mountPath: /host/etc
          name: etc-fs
          readOnly: true
      - args:
        - artifact
        - install
        - --log-format=json
        env: null
        image: docker.io/falcosecurity/falcoctl:0.8.0
        imagePullPolicy: IfNotPresent
        name: falcoctl-artifact-install
        securityContext: null
        volumeMounts:
        - mountPath: /plugins
          name: plugins-install-dir
        - mountPath: /rulesfiles
          name: rulesfiles-install-dir
        - mountPath: /etc/falcoctl
          name: falcoctl-config-volume
      serviceAccountName: falco
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - emptyDir: {}
        name: plugins-install-dir
      - emptyDir: {}
        name: rulesfiles-install-dir
      - emptyDir: {}
        name: root-falco-fs
      - hostPath:
          path: /boot
        name: boot-fs
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /usr
        name: usr-fs
      - hostPath:
          path: /etc
        name: etc-fs
      - hostPath:
          path: /var/run
        name: docker-socket
      - hostPath:
          path: /run/containerd
        name: containerd-socket
      - hostPath:
          path: /run/crio
        name: crio-socket
      - hostPath:
          path: /proc
        name: proc-fs
      - configMap:
          items:
          - key: falcoctl.yaml
            path: falcoctl.yaml
          name: falco-falcoctl
        name: falcoctl-config-volume
      - configMap:
          items:
          - key: falco.yaml
            path: falco.yaml
          name: falco
        name: falco-yaml
  updateStrategy:
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  labels:
    app.kubernetes.io/component: ui
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/version: 2.28.0
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick-ui
  namespace: falco
spec:
  ingressClassName: nginx
  rules:
  - host: falcosidekick.k8s.integratn.tech
    http:
      paths:
      - backend:
          service:
            name: falco-falcosidekick-ui
            port:
              name: http
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - falcosidekick.k8s.integratn.tech
    secretName: falcosidekick-tls
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: falcosidekick
  namespace: falco
spec:
  itemPath: vaults/homelab/items/falcosidekick
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test-success
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falcosidekick
    helm.sh/chart: falcosidekick-0.7.19
  name: falco-falcosidekick-test-connection
  namespace: falco
spec:
  containers:
  - args:
    - -X
    - POST
    - falco-falcosidekick:2801/ping
    command:
    - curl
    image: appropriate/curl
    name: curl
  restartPolicy: Never
