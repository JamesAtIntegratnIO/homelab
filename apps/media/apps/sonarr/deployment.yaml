kind: Deployment
apiVersion: apps/v1
metadata:
  name: sonarr
  namespace: media
  labels:
    app: sonarr
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: sonarr
          image: "harbor.k8s.lan/dockerhub-proxy/linuxserver/sonarr:latest"
          imagePullPolicy: Always
          resources: {}
          env:
            - name: PUID
              value: "99"
            - name: PGID
              value: "100"
            - name: "TZ"
              value: "America/Denver"
          ports:
            - name: http
              containerPort: 8989
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /usr/bin/env
                - bash
                - -c
                - curl --fail localhost:8989/api/v3/system/status?apiKey=`IFS=\>
                  && while read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo
                  $C; fi; done < /config/config.xml`
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8989
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8989
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
          volumeMounts:
            - name: downloads
              mountPath: /data/downloads
            - name: media
              mountPath: /data/media
            - name: sonarr-config
              mountPath: /config
      volumes:
        - name: downloads
          persistentVolumeClaim:
            claimName: downloads_tv
        - name: media
          persistentVolumeClaim:
            claimName: media_tv
        - name: sonarr-config
          persistentVolumeClaim:
            claimName: config_sonarr