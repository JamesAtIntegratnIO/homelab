apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: hajimari
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hajimari
    app.kubernetes.io/version: v0.3.1
    helm.sh/chart: hajimari-2.0.2
  name: hajimari
  namespace: hajimari
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: hajimari
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hajimari
    app.kubernetes.io/version: v0.3.1
    helm.sh/chart: hajimari-2.0.2
  name: hajimari
rules:
- apiGroups:
  - ""
  - extensions
  - networking.k8s.io
  - discovery.k8s.io
  resources:
  - ingresses
  - namespaces
  - endpointslices
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: hajimari
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hajimari
    app.kubernetes.io/version: v0.3.1
    helm.sh/chart: hajimari-2.0.2
  name: hajimari
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hajimari
subjects:
- kind: ServiceAccount
  name: hajimari
  namespace: hajimari
---
apiVersion: v1
data:
  config.yaml: |-
    alwaysTargetBlank: false
    customApps: []
    customThemes:
    - accentColor: '#d8323c'
      backgroundColor: '#0c0e0c'
      name: danger
      primaryColor: '#eaebea'
    darkTheme: espresso
    defaultAppIcon: mdi:application
    defaultEnable: true
    defaultSearchProvider: DuckDuckGo
    globalBookmarks:
    - bookmarks:
      - name: Discord
        url: https://discord.com
      - name: Gmail
        url: http://gmail.com
      - name: Slack
        url: https://slack.com/signin
      group: Communicate
    - bookmarks:
      - name: Box
        url: https://box.com
      - name: Dropbox
        url: https://dropbox.com
      - name: Drive
        url: https://drive.google.com
      group: Cloud
    - bookmarks:
      - name: Awwwards
        url: https://awwwards.com
      - name: Dribbble
        url: https://dribbble.com
      - name: Muz.li
        url: https://medium.muz.li/
      group: Design
    - bookmarks:
      - name: Codepen
        url: https://codepen.io/
      - name: Devdocs
        url: https://devdocs.io
      - name: Devhints
        url: https://devhints.io
      group: Dev
    - bookmarks:
      - name: Design Milk
        url: https://design-milk.com/category/interior-design/
      - name: Dwell
        url: https://www.dwell.com/
      - name: Freshome
        url: https://www.mymove.com/freshome/
      group: Lifestyle
    - bookmarks:
      - name: Spotify
        url: http://browse.spotify.com
      - name: Trakt
        url: http://trakt.tv
      - name: YouTube
        url: https://youtube.com/feed/subscriptions
      group: Media
    - bookmarks:
      - name: Instapaper
        url: https://www.instapaper.com/u
      - name: Medium
        url: http://medium.com
      - name: Reddit
        url: http://reddit.com
      group: Reading
    - bookmarks:
      - name: TheNextWeb
        url: https://thenextweb.com/
      - name: The Verge
        url: https://theverge.com/
      - name: MIT Technology Review
        url: https://www.technologyreview.com/
      group: Tech
    instanceName: null
    lightTheme: espresso
    name: You
    namespaceSelector:
      matchNames:
      - default
      - downloads
      - media
      - monitoring
      - home-assistant
      - code-server
      - backstage
    searchProviders:
    - icon: simple-icons:google
      name: Google
      searchUrl: https://www.google.com/search?q={query}
      token: g
      url: https://www.google.com
    - icon: simple-icons:duckduckgo
      name: DuckDuckGo
      searchUrl: https://duckduckgo.com/?q={query}
      token: d
      url: https://duckduckgo.com
    - icon: simple-icons:imdb
      name: IMDB
      searchUrl: https://www.imdb.com/find?q={query}
      token: i
      url: https://www.imdb.com
    - icon: simple-icons:reddit
      name: Reddit
      searchUrl: https://www.reddit.com/search?q={query}
      token: r
      url: https://www.reddit.com
    - icon: simple-icons:youtube
      name: YouTube
      searchUrl: https://www.youtube.com/results?search_query={query}
      token: "y"
      url: https://www.youtube.com
    - icon: simple-icons:spotify
      name: Spotify
      searchUrl: hhttps://open.spotify.com/search/{query}
      token: s
      url: https://open.spotify.com
    showAppGroups: true
    showAppInfo: true
    showAppStatus: true
    showAppUrls: false
    showBookmarkGroups: true
    showGlobalBookmarks: true
    showGreeting: false
    title: Hajimari
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: hajimari
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hajimari
    app.kubernetes.io/version: v0.3.1
    helm.sh/chart: hajimari-2.0.2
  name: hajimari-settings
  namespace: hajimari
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: hajimari
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hajimari
    app.kubernetes.io/service: hajimari
    app.kubernetes.io/version: v0.3.1
    helm.sh/chart: hajimari-2.0.2
  name: hajimari
  namespace: hajimari
spec:
  ports:
  - name: http
    port: 3000
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: hajimari
    app.kubernetes.io/name: hajimari
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: k8s-sigs.io/config-nfs-subdir-external-provisioner
  labels:
    app: hajimari
    backstage.io/kubernetes-id: hajimari
  name: hajimari-data
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  nfs:
    path: /mnt/user/appdata/hajimari
    server: 10.0.0.12
  persistentVolumeReclaimPolicy: Retain
  storageClassName: config-nfs-client
  volumeMode: Filesystem
status: null
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/instance: hajimari
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hajimari
    app.kubernetes.io/version: v0.3.1
    helm.sh/chart: hajimari-2.0.2
  name: hajimari-data
  namespace: hajimari
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: config-nfs-client
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: hajimari
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hajimari
    app.kubernetes.io/version: v0.3.1
    helm.sh/chart: hajimari-2.0.2
  name: hajimari
  namespace: hajimari
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: hajimari
      app.kubernetes.io/name: hajimari
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: hajimari
        app.kubernetes.io/name: hajimari
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: TZ
          value: UTC
        image: ghcr.io/toboshii/hajimari:v0.3.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 0
          periodSeconds: 10
          tcpSocket:
            port: 3000
          timeoutSeconds: 1
        name: hajimari
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 0
          periodSeconds: 10
          tcpSocket:
            port: 3000
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 122m
            memory: 263M
          requests:
            cpu: 25m
            memory: 263M
        startupProbe:
          failureThreshold: 30
          initialDelaySeconds: 0
          periodSeconds: 5
          tcpSocket:
            port: 3000
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /config/config.yaml
          name: hajimari-settings
          subPath: config.yaml
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      serviceAccountName: hajimari
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: hajimari-data
      - configMap:
          name: hajimari-settings
        name: hajimari-settings
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    hajimari.io/enable: "false"
  labels:
    app.kubernetes.io/instance: hajimari
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hajimari
    app.kubernetes.io/version: v0.3.1
    helm.sh/chart: hajimari-2.0.2
  name: hajimari
  namespace: hajimari
spec:
  ingressClassName: nginx
  rules:
  - host: k8s.integratn.tech
    http:
      paths:
      - backend:
          service:
            name: hajimari
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - k8s.integratn.tech
    secretName: hajimari-tls
