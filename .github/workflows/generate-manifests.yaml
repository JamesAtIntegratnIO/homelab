name: Generate Manifests

on:
  push:
    branches:
      - main
    paths:
      - 'core/**'
      - 'apps/**'
      - 'monitoring/**'
      - .github/workflows/generate-manifests.yaml

jobs:
  template_the_manifests:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    strategy:
      matrix:
        include:
          - source_folder: core
            branch: infra
          - source_folder: apps
            branch: apps
          - source_folder: monitoring
            branch: monitoring

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
          ref: main

      - run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: 'v3.14.4'
      
      - name: Get Directories for Processing
        run: |
          dirs=$(find "$(pwd)" -type d -regex ".*/${{ matrix.source_folder }}/[^/]+/overlays/[^/]+" | tr '\n' ',')
          echo "dirs=${dirs%,}" >> $GITHUB_ENV

      - name: Add Helm repositories dynamically
        run: |
          IFS=',' read -r -a dir_array <<< "${dirs}"
          for dir in "${dir_array[@]}"; do
            if [ -d "$dir" ]; then
              cd $dir
              cd ../../base
              if [ -f Chart.yaml ]; then
                dependencies=$(yq e '.dependencies[] | (.name + "=" + .repository)' Chart.yaml)
                IFS=$'\n'
                for dep in $dependencies; do
                  repo_name="${dep%=*}"
                  repo_url="${dep#*=}"
                  if [ ! -z "$repo_url" ]; then
                    helm repo add "$repo_name" "$repo_url"
                  fi
                done
                helm repo update
              else
                echo "Chart.yaml does not exist in the base directory"
              fi
              cd $GITHUB_WORKSPACE
            fi
          done

      - name: Template Helm charts
        run: |
          IFS=',' read -r -a dir_array <<< "${dirs}"
          for dir in "${dir_array[@]}"; do
            if [ -d "$dir" ]; then
              cd $dir
              cd ../../base
              if [ -f Chart.yaml ]; then
                cd $dir
                BASE_NAMESPACE=$(cat ../../base/kustomization.yaml | yq e '.namespace // "default"' -)
                NAMESPACE=$(cat kustomization.yaml | yq e ".namespace // \"$BASE_NAMESPACE\"" -)
                helm dependency build ../../base
                touch ../../base/values.yaml
                touch values.yaml
                helm template \
                  --release-name ${NAMESPACE} \
                  ../../base \
                  -f ../../base/values.yaml \
                  --include-crds \
                  -f values.yaml > helm-all.yaml
              fi
              cd $dir
              kustomize build . > all.yaml
              git add all.yaml
            fi
            cd $GITHUB_WORKSPACE
          done

      - name: Commit changes to branch
        run: |
          git fetch origin ${{ matrix.branch }}:${{ matrix.branch }} || true
          git stash
          if git show-ref --verify --quiet refs/heads/${{ matrix.branch }}; then
            git switch ${{ matrix.branch }}
          else
            git switch --create ${{ matrix.branch }} origin/${{ matrix.branch }} || git switch --create ${{ matrix.branch }}
          fi
          git rm -rf . --quiet
          git stash pop
          git add **/all.yaml
          if ! git diff --quiet --staged; then
            git commit -m "${{ github.event.head_commit.message }}"
            git push --set-upstream origin ${{ matrix.branch }}
          else
            echo "No changes detected"
          fi
